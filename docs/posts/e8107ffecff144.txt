1:"$Sreact.fragment"
3:I[831,[],""]
4:I[8307,[],""]
6:I[9757,[],"MetadataBoundary"]
8:I[9757,[],"OutletBoundary"]
b:I[8475,[],"AsyncMetadataOutlet"]
d:I[9757,[],"ViewportBoundary"]
f:I[8458,[],""]
:HL["/_next/static/css/47a2cdd79f9d68e5.css","style"]
:HL["/_next/static/css/70e902a91c528fbe.css","style"]
0:{"P":null,"b":"yJkftwFOiF29VegR0JLL3","p":"","c":["","posts","e8107ffecff144"],"i":false,"f":[[["",{"children":["posts",{"children":[["slug","e8107ffecff144","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/47a2cdd79f9d68e5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/70e902a91c528fbe.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","div",null,{"className":"container-fluid","children":["$","div",null,{"className":"row","children":[["$","div",null,{"className":"col-sm-3","style":{"fontSize":12.5},"children":"$L2"}],["$","div",null,{"className":"col-sm-9","children":["$","div",null,{"className":"container-fluid","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]}]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","e8107ffecff144","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",["$","$L6",null,{"children":"$L7"}],null,["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","perhE9QGBNMNs-S7X5_j8",{"children":[["$","$Ld",null,{"children":"$Le"}],null]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[8475,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
13:I[70,["177","static/chunks/app/layout-bef829f3c2619dcf.js"],""]
a:null
2:[["$","h2",null,{"children":"one.ilmsg.in.th"}],["$","ul",null,{"className":"list-group","children":[["$","li","99",{"className":"list-group-item","children":["$","$L13",null,{"href":"/","children":"⛪ Home"}]}],[["$","li","c5bc731ce737e7",{"className":"list-group-item","children":["📚"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e7","className":"link-underline link-underline-opacity-0","children":"Think and Grow Rich"}]]}],["$","li","c5bc731ce737e6",{"className":"list-group-item","children":["📚"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e6","className":"link-underline link-underline-opacity-0","children":"Rich Dad Poor Dad"}]]}],["$","li","c5bc731ce737e5",{"className":"list-group-item","children":["📚"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e5","className":"link-underline link-underline-opacity-0","children":"The Power of Now"}]]}],["$","li","c5bc731ce737e4",{"className":"list-group-item","children":["👻"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e4","className":"link-underline link-underline-opacity-0","children":"Getting Things Done (GTD)"}]]}],["$","li","c5bc731ce737e3",{"className":"list-group-item","children":["👻"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e3","className":"link-underline link-underline-opacity-0","children":"Make Your Bed"}]]}],["$","li","c5bc731ce737e2",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e2","className":"link-underline link-underline-opacity-0","children":"The 4-Hour Workweek"}]]}],["$","li","c5bc731ce737e1",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e1","className":"link-underline link-underline-opacity-0","children":"Who Moved My Cheese?"}]]}],["$","li","c5bc731ce737e0",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e0","className":"link-underline link-underline-opacity-0","children":"Deep Work"}]]}],["$","li","c5bc731ce737d9",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d9","className":"link-underline link-underline-opacity-0","children":"How to Stop Worrying and Start Living"}]]}],["$","li","c5bc731ce737d8",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d8","className":"link-underline link-underline-opacity-0","children":"Act Like a Lady, Think Like a Man"}]]}],["$","li","c5bc731ce737d7",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d7","className":"link-underline link-underline-opacity-0","children":"The 7 Habits of Highly Effective People"}]]}],["$","li","c5bc731ce737d5",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d5","className":"link-underline link-underline-opacity-0","children":"Take back your time"}]]}],["$","li","c03054919d6766",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6766","className":"link-underline link-underline-opacity-0","children":"The 5 Second Rule"}]]}],["$","li","c03054919d6763",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6763","className":"link-underline link-underline-opacity-0","children":"The 5 Second Rule"}]]}],["$","li","c03054919d6762",{"className":"list-group-item","children":["🐕"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6762","className":"link-underline link-underline-opacity-0","children":"Data Structures & Algorithms Cheat Sheet"}]]}],["$","li","98034aa5671421",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/98034aa5671421","className":"link-underline link-underline-opacity-0","children":"Chart Cheat Sheet"}]]}],["$","li","98034aa5671420",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/98034aa5671420","className":"link-underline link-underline-opacity-0","children":"8 Disciplines"}]]}],["$","li","98034aa5671419",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/98034aa5671419","className":"link-underline link-underline-opacity-0","children":"Get Your Shit Together"}]]}],["$","li","98034aa5671418",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/98034aa5671418","className":"link-underline link-underline-opacity-0","children":"Data Analyst"}]]}],["$","li","913edb41bb27d4",{"className":"list-group-item","children":["👻"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/913edb41bb27d4","className":"link-underline link-underline-opacity-0","children":"The $100 Startup"}]]}],["$","li","71a40e60fab23f",{"className":"list-group-item","children":["🕌"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/71a40e60fab23f","className":"link-underline link-underline-opacity-0","children":"8 ข้อคิดจากหนังสือ The Startup Mindset"}]]}],["$","li","5d0eb6b5d79ef5",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/5d0eb6b5d79ef5","className":"link-underline link-underline-opacity-0","children":"Disrupt Yourself"}]]}],["$","li","5d0eb6b5d79ef4",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/5d0eb6b5d79ef4","className":"link-underline link-underline-opacity-0","children":"How to Read Any Room"}]]}],["$","li","5d0eb6b5d79ef3",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/5d0eb6b5d79ef3","className":"link-underline link-underline-opacity-0","children":"Atomic Habits"}]]}],["$","li","5d0eb6b5d79ef2",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/5d0eb6b5d79ef2","className":"link-underline link-underline-opacity-0","children":"หนังสือการเงิน 7 เล่ม"}]]}],["$","li","5d0eb6b5d79ef1",{"className":"list-group-item","children":["💬"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/5d0eb6b5d79ef1","className":"link-underline link-underline-opacity-0","children":"เคียร์เคอการ์ด ฉบับกระชับ"}]]}],["$","li","186a50e7ae7288",{"className":"list-group-item","children":["😺"," ",["$","span",null,{"className":"badge bg-primary","children":"book"}]," ",["$","$L13",null,{"href":"/posts/186a50e7ae7288","className":"link-underline link-underline-opacity-0","children":"Startup Mindset"}]]}],["$","li","c5bc731ce737d4",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d4","className":"link-underline link-underline-opacity-0","children":"(RBAC) in Next.js"}]]}],["$","li","c03054919d6765",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6765","className":"link-underline link-underline-opacity-0","children":"Concurrency in Go Web Applications"}]]}],["$","li","c03054919d6764",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6764","className":"link-underline link-underline-opacity-0","children":"best practices for multi tenant authorization"}]]}],["$","li","982b3df1525faa",{"className":"list-group-item","children":["🎃"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/982b3df1525faa","className":"link-underline link-underline-opacity-0","children":"Your Money or Your Life"}]]}],["$","li","98034aa5671417",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/98034aa5671417","className":"link-underline link-underline-opacity-0","children":"Master The Art of Negotiation"}]]}],["$","li","98034aa5671416",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/98034aa5671416","className":"link-underline link-underline-opacity-0","children":"การรับมือกับความท้าทายในชีวิต"}]]}],["$","li","844e6b801e6d29",{"className":"list-group-item","children":["📌"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/844e6b801e6d29","className":"link-underline link-underline-opacity-0","children":"Die With Zero"}]]}],["$","li","74e27bf78b3819",{"className":"list-group-item","children":["🎃"," ",["$","span",null,{"className":"badge bg-primary","children":"idea"}]," ",["$","$L13",null,{"href":"/posts/74e27bf78b3819","className":"link-underline link-underline-opacity-0","children":"The Millionaire Fastlane"}]]}],["$","li","c5bc731ce737d6",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"info"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d6","className":"link-underline link-underline-opacity-0","children":"How to learn anything 5x faster"}]]}],["$","li","ed5595feec2c7d",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/ed5595feec2c7d","className":"link-underline link-underline-opacity-0","children":"Key Performance Indicators - KPIs"}]]}],["$","li","ed5595feec2c7c",{"className":"list-group-item","children":["🤖"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/ed5595feec2c7c","className":"link-underline link-underline-opacity-0","children":"Frontend Performance Cheatsheet"}]]}],["$","li","e8107ffecff144",{"className":"list-group-item","children":["🐡"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/e8107ffecff144","className":"link-underline link-underline-opacity-0","children":"Next.js ร่วมกับ gray-matter"}]]}],["$","li","c5bc731ce737e9",{"className":"list-group-item","children":["📚"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e9","className":"link-underline link-underline-opacity-0","children":"6 Key Business Frameworks Matrix"}]]}],["$","li","c5bc731ce737e8",{"className":"list-group-item","children":["📚"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737e8","className":"link-underline link-underline-opacity-0","children":"Chapter 01"}]]}],["$","li","c5bc731ce737d3",{"className":"list-group-item","children":["😊"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/c5bc731ce737d3","className":"link-underline link-underline-opacity-0","children":"Concurrency in Go Web Applications"}]]}],["$","li","c03054919d6761",{"className":"list-group-item","children":["🐕"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6761","className":"link-underline link-underline-opacity-0","children":"Essential Python Libraries for Data Science in 2025!"}]]}],["$","li","c03054919d6760",{"className":"list-group-item","children":["👋"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/c03054919d6760","className":"link-underline link-underline-opacity-0","children":"Prompt Engineering Techniques"}]]}],["$","li","9a626d1cda8653",{"className":"list-group-item","children":["💨"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/9a626d1cda8653","className":"link-underline link-underline-opacity-0","children":"TodoList ด้วย React, TypeScript, Firestore และ DaisyUI"}]]}],["$","li","961ddacbc63b92",{"className":"list-group-item","children":["🕌"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/961ddacbc63b92","className":"link-underline link-underline-opacity-0","children":"The Ultimate API Learning Roadmap"}]]}],["$","li","804f31b1ed61e7",{"className":"list-group-item","children":["👋"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/804f31b1ed61e7","className":"link-underline link-underline-opacity-0","children":"show me the cat"}]]}],["$","li","745b52707bd1f8",{"className":"list-group-item","children":["🐷"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/745b52707bd1f8","className":"link-underline link-underline-opacity-0","children":"Running Lean"}]]}],["$","li","5db5fceb39abb2",{"className":"list-group-item","children":["🦁"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/5db5fceb39abb2","className":"link-underline link-underline-opacity-0","children":"Cheatsheet On Database Performance"}]]}],["$","li","43d0123ac6e4e9",{"className":"list-group-item","children":["👻"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/43d0123ac6e4e9","className":"link-underline link-underline-opacity-0","children":"Data Analytics"}]]}],["$","li","43d0123ac6e4e8",{"className":"list-group-item","children":["👻"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/43d0123ac6e4e8","className":"link-underline link-underline-opacity-0","children":"Chapter 02"}]]}],["$","li","423e4444fe4bdf",{"className":"list-group-item","children":["📌"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/423e4444fe4bdf","className":"link-underline link-underline-opacity-0","children":"One-Page Business Plan"}]]}],["$","li","3265bdd2450fc7",{"className":"list-group-item","children":["🌟"," ",["$","span",null,{"className":"badge bg-primary","children":"tech"}]," ",["$","$L13",null,{"href":"/posts/3265bdd2450fc7","className":"link-underline link-underline-opacity-0","children":" วิธีทำน้ำอบไทย"}]]}]]]}]]
14:T7cd8,<p>Okay, มาสร้างบทเรียน Next.js ร่วมกับ <code>gray-matter</code> เพื่อสร้างหน้าแสดงรายการบทความ (List Page) และหน้ารายละเอียดบทความ (Detail Page) จากไฟล์ Markdown กันครับ บทเรียนนี้จะเน้นความละเอียดทีละขั้นตอน</p>
<p><strong>เป้าหมาย:</strong> สร้างเว็บไซต์ง่ายๆ ที่:</p>
<ol>
<li><strong>หน้าแรก (<code>/</code>)</strong>: แสดงรายการบทความทั้งหมด โดยดึงข้อมูลชื่อเรื่อง, วันที่, และ slug (ส่วนหนึ่งของ URL) มาจาก Frontmatter ของไฟล์ Markdown</li>
<li><strong>หน้ารายละเอียดบทความ (<code>/posts/[slug]</code>)</strong>: แสดงเนื้อหาเต็มของบทความ Markdown ที่เลือก</li>
</ol>
<p><strong>เทคโนโลยีที่เราจะใช้:</strong></p>
<ul>
<li><strong>Next.js</strong>: Framework สำหรับสร้าง React Application ที่รองรับ Server-Side Rendering (SSR) และ Static Site Generation (SSG) ซึ่งเหมาะมากกับการทำเว็บ Blog/Content</li>
<li><strong>Markdown</strong>: รูปแบบการเขียนข้อความที่แปลงเป็น HTML ได้ง่าย นิยมใช้เขียนบทความ, เอกสาร</li>
<li><strong><code>gray-matter</code></strong>: Library สำหรับแยกส่วน Frontmatter (ข้อมูล Metadata ที่เขียนในรูปแบบ YAML หรือ JSON ด้านบนสุดของไฟล์ Markdown) ออกจากเนื้อหาหลัก (Content)</li>
<li><strong><code>remark</code> &#x26; <code>remark-html</code></strong>: Library สำหรับแปลงเนื้อหา Markdown เป็น HTML (จำเป็นต้องใช้เพื่อแสดงผลบนหน้าเว็บ)</li>
</ul>
<hr>
<p><strong>ขั้นตอนที่ 1: ตั้งค่าโปรเจกต์ Next.js</strong></p>
<ol>
<li>
<p><strong>สร้างโปรเจกต์ Next.js ใหม่:</strong>
เปิด Terminal หรือ Command Prompt แล้วรันคำสั่ง:</p>
<pre><code class="language-bash">npx create-next-app@latest my-markdown-blog
# หรือ yarn create next-app my-markdown-blog
cd my-markdown-blog
</code></pre>
<p>(เลือกใช้ TypeScript หรือ JavaScript ตามความถนัด ในตัวอย่างนี้จะใช้ JavaScript เป็นหลัก แต่แนวคิดเหมือนกัน)</p>
</li>
<li>
<p><strong>ติดตั้ง Dependencies ที่จำเป็น:</strong></p>
<pre><code class="language-bash">npm install gray-matter remark remark-html
# หรือ yarn add gray-matter remark remark-html
</code></pre>
</li>
</ol>
<hr>
<p><strong>ขั้นตอนที่ 2: เตรียมไฟล์ Markdown สำหรับบทความ</strong></p>
<ol>
<li>
<p><strong>สร้างโฟลเดอร์สำหรับเก็บไฟล์ Markdown:</strong>
ใน root directory ของโปรเจกต์ (<code>my-markdown-blog</code>) ให้สร้างโฟลเดอร์ชื่อ <code>posts</code> (หรือชื่ออื่นตามต้องการ)</p>
<pre><code>my-markdown-blog/
├── posts/
├── pages/
├── public/
├── styles/
└── ... (ไฟล์อื่นๆ)
</code></pre>
</li>
<li>
<p><strong>สร้างไฟล์ Markdown ตัวอย่าง:</strong>
สร้างไฟล์ <code>.md</code> 2-3 ไฟล์ในโฟลเดอร์ <code>posts</code> เช่น:</p>
<ul>
<li>
<p><code>posts/first-post.md</code>:</p>
<pre><code class="language-markdown">---
title: 'โพสต์แรกของฉัน'
date: '2023-10-27'
author: 'Your Name'
---

นี่คือเนื้อหาของ **โพสต์แรก** ของฉัน ยินดีต้อนรับ!

*   รายการที่ 1
*   รายการที่ 2

ลองใช้ Markdown ดูสิ
</code></pre>
</li>
<li>
<p><code>posts/second-post.md</code>:</p>
<pre><code class="language-markdown">---
title: 'เรียนรู้ Next.js และ Markdown'
date: '2023-10-28'
author: 'Another Author'
---

## หัวข้อรอง

เรากำลังเรียนรู้วิธีใช้ `gray-matter` เพื่อแยก frontmatter และใช้ `remark` เพื่อแปลง Markdown เป็น HTML

```javascript
console.log('Hello, Markdown!');
</code></pre>
<pre><code></code></pre>
</li>
<li>
<p><code>posts/yet-another-post.md</code>:</p>
<pre><code class="language-markdown">---
title: 'โพสต์ที่สามเกี่ยวกับอะไรดี'
date: '2023-10-26'
author: 'Your Name'
---

เนื้อหาโพสต์ที่สาม... ลองใส่รูปภาพดูไหม (สมมติว่ามีรูปใน `public/images`)

![Alt text](/images/sample.jpg)
</code></pre>
</li>
</ul>
<p><strong>สำคัญ:</strong></p>
<ul>
<li><strong>Frontmatter:</strong> ส่วนที่อยู่ระหว่าง <code>---</code> ด้านบนสุด คือ Metadata ของบทความ เราจะใช้ <code>gray-matter</code> ดึงข้อมูลส่วนนี้ (เช่น <code>title</code>, <code>date</code>)</li>
<li><strong>ชื่อไฟล์:</strong> ชื่อไฟล์ (เช่น <code>first-post.md</code>) จะถูกใช้เป็น <code>slug</code> สำหรับ URL ของหน้ารายละเอียด (เช่น <code>/posts/first-post</code>)</li>
</ul>
</li>
</ol>
<hr>
<p><strong>ขั้นตอนที่ 3: สร้าง Library Function สำหรับอ่านข้อมูล Markdown</strong></p>
<p>เพื่อไม่ให้โค้ดซ้ำซ้อน เราจะสร้างฟังก์ชันกลางสำหรับอ่านและประมวลผลไฟล์ Markdown</p>
<ol>
<li>
<p><strong>สร้างโฟลเดอร์ <code>lib</code>:</strong> ใน root directory ของโปรเจกต์</p>
</li>
<li>
<p><strong>สร้างไฟล์ <code>lib/posts.js</code>:</strong></p>
<pre><code class="language-javascript">// lib/posts.js
import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';
import { remark } from 'remark';
import html from 'remark-html';

// หา path ไปยังโฟลเดอร์ posts
const postsDirectory = path.join(process.cwd(), 'posts');

export function getSortedPostsData() {
  // อ่านชื่อไฟล์ทั้งหมดใน /posts
  const fileNames = fs.readdirSync(postsDirectory);

  const allPostsData = fileNames.map((fileName) => {
    // ลบ ".md" ออกจากชื่อไฟล์เพื่อใช้เป็น id (slug)
    const id = fileName.replace(/\.md$/, '');

    // อ่านไฟล์ markdown เป็น string
    const fullPath = path.join(postsDirectory, fileName);
    const fileContents = fs.readFileSync(fullPath, 'utf8');

    // ใช้ gray-matter เพื่อแยก frontmatter และ content
    const matterResult = matter(fileContents);

    // รวม data จาก frontmatter กับ id
    return {
      id,
      ...(matterResult.data as { title: string; date: string }), // Cast type ถ้าใช้ TS
    };
  });

  // เรียงลำดับโพสต์ตามวันที่ (ล่าสุดก่อน)
  return allPostsData.sort((a, b) => {
    if (a.date &#x3C; b.date) {
      return 1;
    } else {
      return -1;
    }
  });
}

export function getAllPostIds() {
  // ฟังก์ชันนี้จะคืนค่า array ของ id (slug) ทั้งหมด
  // สำหรับใช้ใน getStaticPaths
  const fileNames = fs.readdirSync(postsDirectory);

  // คืนค่า array หน้าตาแบบนี้:
  // [
  //   { params: { id: 'first-post' } },
  //   { params: { id: 'second-post' } }
  // ]
  return fileNames.map((fileName) => {
    return {
      params: {
        id: fileName.replace(/\.md$/, ''),
      },
    };
  });
}

export async function getPostData(id: string) {
  // ฟังก์ชันนี้จะคืนข้อมูลทั้งหมดของโพสต์ที่ระบุ id (slug)
  // รวมถึงเนื้อหาที่แปลงเป็น HTML แล้ว
  const fullPath = path.join(postsDirectory, `${id}.md`);
  const fileContents = fs.readFileSync(fullPath, 'utf8');

  // ใช้ gray-matter แยก frontmatter
  const matterResult = matter(fileContents);

  // ใช้ remark แปลง markdown content เป็น HTML
  const processedContent = await remark()
    .use(html)
    .process(matterResult.content);
  const contentHtml = processedContent.toString();

  // รวม data, id, และ contentHtml
  return {
    id,
    contentHtml,
    ...(matterResult.data as { title: string; date: string }), // Cast type ถ้าใช้ TS
  };
}
</code></pre>
<p><strong>อธิบายโค้ดใน <code>lib/posts.js</code>:</strong></p>
<ul>
<li><code>fs</code>, <code>path</code>: Module ของ Node.js สำหรับทำงานกับ File System และ Path</li>
<li><code>matter</code>: ฟังก์ชันจาก <code>gray-matter</code> สำหรับ parse ไฟล์ Markdown</li>
<li><code>remark</code>, <code>remark-html</code>: ใช้สำหรับแปลง Markdown เป็น HTML</li>
<li><code>postsDirectory</code>: เก็บ path เต็มไปยังโฟลเดอร์ <code>posts</code></li>
<li><code>getSortedPostsData()</code>:
<ul>
<li>อ่านไฟล์ทั้งหมดใน <code>postsDirectory</code></li>
<li>วนลูปแต่ละไฟล์:
<ul>
<li>สร้าง <code>id</code> (slug) จากชื่อไฟล์</li>
<li>อ่านเนื้อหาไฟล์</li>
<li>ใช้ <code>matter()</code> แยก <code>data</code> (frontmatter) และ <code>content</code></li>
<li>คืนค่า object ที่มี <code>id</code> และข้อมูลจาก <code>data</code></li>
</ul>
</li>
<li>เรียงลำดับโพสต์ตาม <code>date</code></li>
</ul>
</li>
<li><code>getAllPostIds()</code>:
<ul>
<li>อ่านชื่อไฟล์ทั้งหมด</li>
<li>สร้าง array ของ object ที่มี key <code>params</code> ซึ่งข้างในมี <code>id</code> (slug) ของแต่ละโพสต์ รูปแบบนี้จำเป็นสำหรับ <code>getStaticPaths</code> ใน Next.js</li>
</ul>
</li>
<li><code>getPostData(id)</code>:
<ul>
<li>รับ <code>id</code> (slug) เข้ามา</li>
<li>หา path ของไฟล์ Markdown ที่ตรงกับ <code>id</code></li>
<li>อ่านเนื้อหาไฟล์</li>
<li>ใช้ <code>matter()</code> แยก <code>data</code> และ <code>content</code></li>
<li>ใช้ <code>remark().use(html).process()</code> แปลง <code>matterResult.content</code> (เนื้อหา Markdown) เป็น <code>contentHtml</code> (สตริง HTML) <strong>(ขั้นตอนนี้สำคัญมากสำหรับการแสดงผล)</strong></li>
<li>คืนค่า object ที่มี <code>id</code>, <code>contentHtml</code>, และข้อมูลจาก <code>data</code></li>
</ul>
</li>
</ul>
</li>
</ol>
<hr>
<p><strong>ขั้นตอนที่ 4: สร้างหน้าแสดงรายการบทความ (List Page)</strong></p>
<p>แก้ไขไฟล์ <code>pages/index.js</code> (หรือ <code>pages/index.tsx</code> ถ้าใช้ TypeScript)</p>
<pre><code class="language-jsx">// pages/index.js
import Head from 'next/head';
import Link from 'next/link';
import { getSortedPostsData } from '../lib/posts'; // Import ฟังก์ชันที่เราสร้าง
import styles from '../styles/Home.module.css'; // หรือใช้ CSS Modules/Tailwind

// ฟังก์ชันนี้จะรันตอน build time บน server
export async function getStaticProps() {
  const allPostsData = getSortedPostsData(); // เรียกใช้ฟังก์ชันดึงข้อมูลโพสต์
  return {
    props: {
      allPostsData, // ส่งข้อมูลโพสต์ไปเป็น props ให้ component
    },
  };
}

// Component หลักของหน้า Home
export default function Home({ allPostsData }) { // รับ props ที่ส่งมาจาก getStaticProps
  return (
    &#x3C;div className={styles.container}>
      &#x3C;Head>
        &#x3C;title>My Markdown Blog&#x3C;/title>
        &#x3C;meta name="description" content="Blog สร้างด้วย Next.js และ Markdown" />
        &#x3C;link rel="icon" href="/favicon.ico" />
      &#x3C;/Head>

      &#x3C;main className={styles.main}>
        &#x3C;h1 className={styles.title}>
          ยินดีต้อนรับสู่ Blog ของฉัน
        &#x3C;/h1>

        &#x3C;section className={`${styles.grid} ${styles.blogList}`}> {/* เพิ่ม class จัดสไตล์ */}
          &#x3C;h2>บทความล่าสุด&#x3C;/h2>
          &#x3C;ul>
            {allPostsData.map(({ id, date, title }) => (
              &#x3C;li key={id} className={styles.listItem}>
                &#x3C;Link href={`/posts/${id}`}>
                  &#x3C;a>{title}&#x3C;/a>
                &#x3C;/Link>
                &#x3C;br />
                &#x3C;small className={styles.lightText}>
                  {/* อาจจะต้อง format date เพิ่มเติม */}
                  {date}
                &#x3C;/small>
              &#x3C;/li>
            ))}
          &#x3C;/ul>
        &#x3C;/section>
      &#x3C;/main>
    &#x3C;/div>
  );
}
</code></pre>
<p><strong>อธิบาย <code>pages/index.js</code>:</strong></p>
<ol>
<li><strong><code>getStaticProps</code></strong>:
<ul>
<li>นี่คือฟังก์ชันพิเศษของ Next.js ที่ใช้สำหรับ <strong>Static Site Generation (SSG)</strong></li>
<li>มันจะถูกเรียก <strong>ตอน Build Time</strong> (ไม่ใช่ตอน User ร้องขอหน้าเว็บ) บนฝั่ง Server</li>
<li>เราเรียก <code>getSortedPostsData()</code> จาก <code>lib/posts.js</code> เพื่อดึงข้อมูลโพสต์ทั้งหมดที่เรียงลำดับแล้ว</li>
<li><code>return { props: { allPostsData } }</code>: ข้อมูลที่ return ใน <code>props</code> จะถูกส่งไปให้ <code>Home</code> component</li>
</ul>
</li>
<li><strong><code>Home</code> Component</strong>:
<ul>
<li>รับ <code>allPostsData</code> มาจาก <code>props</code></li>
<li>ใช้ <code>.map()</code> เพื่อวนลูปสร้างรายการ (<code>&#x3C;li></code>) ของแต่ละโพสต์</li>
<li>ใช้ <code>&#x3C;Link href={</code>/posts/${id}<code>}></code> ของ Next.js เพื่อสร้างลิงก์ไปยังหน้ารายละเอียดของแต่ละโพสต์ URL จะเป็น <code>/posts/first-post</code>, <code>/posts/second-post</code> เป็นต้น</li>
<li>แสดง <code>title</code> และ <code>date</code> ของแต่ละโพสต์</li>
</ul>
</li>
</ol>
<hr>
<p><strong>ขั้นตอนที่ 5: สร้างหน้ารายละเอียดบทความ (Detail Page) - Dynamic Routes</strong></p>
<ol>
<li>
<p><strong>สร้างโฟลเดอร์ <code>posts</code> ภายใน <code>pages</code>:</strong> โฟลเดอร์นี้จะเก็บ Dynamic Route ของเรา</p>
<pre><code>my-markdown-blog/
├── lib/
├── posts/
├── pages/
│   ├── api/
│   ├── _app.js
│   ├── index.js
│   └── posts/      &#x3C;-- สร้างโฟลเดอร์นี้
│       └── [id].js  &#x3C;-- สร้างไฟล์นี้ (หรือ [slug].js)
├── public/
├── styles/
└── ...
</code></pre>
</li>
<li>
<p><strong>สร้างไฟล์ <code>pages/posts/[id].js</code>:</strong> (หรือ <code>[slug].js</code> ถ้าต้องการใช้ชื่อ slug) ชื่อไฟล์ใน <code>[]</code> บ่งบอกว่านี่คือ Dynamic Route Segment</p>
<pre><code class="language-jsx">// pages/posts/[id].js
import Head from 'next/head';
import Link from 'next/link';
import { getAllPostIds, getPostData } from '../../lib/posts'; // Import functions
import styles from '../../styles/Post.module.css'; // สร้างไฟล์ CSS นี้ด้วย

// ฟังก์ชันนี้จะรันตอน build time เพื่อบอก Next.js ว่ามี path อะไรบ้างที่จะต้องสร้างเป็น static page
export async function getStaticPaths() {
  const paths = getAllPostIds(); // ดึง array ของ { params: { id: '...' } }
  return {
    paths,
    fallback: false, // ถ้าเข้า path ที่ไม่มีใน paths ให้แสดงหน้า 404
    // fallback: true // จะพยายาม generate หน้าใหม่ถ้ายังไม่มี (เหมาะกับข้อมูลเยอะๆ)
    // fallback: 'blocking' // เหมือน true แต่จะรอจน generate เสร็จก่อนส่งให้ user
  };
}

// ฟังก์ชันนี้จะรันตอน build time สำหรับ *แต่ละ* path ที่ได้จาก getStaticPaths
export async function getStaticProps({ params }) {
  // params.id จะมีค่า slug ของหน้านั้นๆ (เช่น 'first-post')
  const postData = await getPostData(params.id); // ดึงข้อมูลโพสต์ + contentHtml
  return {
    props: {
      postData, // ส่งข้อมูลโพสต์ไปให้ component
    },
  };
}

// Component หลักของหน้ารายละเอียดโพสต์
export default function Post({ postData }) { // รับ props จาก getStaticProps
  return (
    &#x3C;div className={styles.container}>
      &#x3C;Head>
        &#x3C;title>{postData.title}&#x3C;/title>
        {/* เพิ่ม Meta tags อื่นๆ ได้ตามต้องการ */}
      &#x3C;/Head>

      &#x3C;article className={styles.article}>
        &#x3C;h1 className={styles.title}>{postData.title}&#x3C;/h1>
        &#x3C;div className={styles.meta}>
          {/* แสดงวันที่ หรือ ผู้เขียน */}
          Date: {postData.date}
          {postData.author &#x26;&#x26; ` | Author: ${postData.author}`}
        &#x3C;/div>
        &#x3C;hr className={styles.separator} />
        {/* แสดงเนื้อหา HTML ที่แปลงมาจาก Markdown */}
        {/* สำคัญ: ใช้ dangerouslySetInnerHTML เพราะ contentHtml เป็นสตริง HTML */}
        &#x3C;div dangerouslySetInnerHTML={{ __html: postData.contentHtml }} />
      &#x3C;/article>

      &#x3C;div className={styles.backToHome}>
        &#x3C;Link href="/">
          &#x3C;a>← กลับไปหน้าแรก&#x3C;/a>
        &#x3C;/Link>
      &#x3C;/div>
    &#x3C;/div>
  );
}
</code></pre>
</li>
</ol>
<p><strong>อธิบาย <code>pages/posts/[id].js</code>:</strong></p>
<ol>
<li><strong><code>getStaticPaths</code></strong>:
<ul>
<li>ฟังก์ชันพิเศษของ Next.js ที่ต้องใช้คู่กับ <code>getStaticProps</code> ใน Dynamic Routes (<code>[id].js</code>)</li>
<li>หน้าที่ของมันคือบอก Next.js ว่า <strong>มี <code>id</code> (หรือ <code>slug</code>) อะไรบ้าง</strong> ที่จะต้องสร้างเป็นหน้า Static ล่วงหน้าตอน Build Time</li>
<li>เราเรียก <code>getAllPostIds()</code> จาก <code>lib/posts.js</code> ซึ่งคืนค่า array ในรูปแบบที่ <code>getStaticPaths</code> ต้องการ (<code>[{ params: { id: '...' } }, ...]</code>)</li>
<li><code>fallback: false</code>: หมายความว่าถ้าผู้ใช้เข้า URL ที่ไม่มี <code>id</code> อยู่ใน <code>paths</code> ที่เราสร้างไว้ Next.js จะแสดงหน้า 404 Not Found</li>
</ul>
</li>
<li><strong><code>getStaticProps</code></strong>:
<ul>
<li>ฟังก์ชันนี้จะถูกเรียก <strong>สำหรับแต่ละ <code>id</code></strong> ที่ <code>getStaticPaths</code> คืนค่ามา ตอน Build Time</li>
<li><code>{ params }</code>: Next.js จะส่ง object <code>params</code> เข้ามา ซึ่งจะมี key ตรงกับชื่อไฟล์ใน <code>[]</code> (ในที่นี้คือ <code>id</code>) ดังนั้น <code>params.id</code> จะมีค่าเป็น slug ของหน้านั้นๆ (เช่น <code>'first-post'</code>)</li>
<li>เราเรียก <code>getPostData(params.id)</code> จาก <code>lib/posts.js</code> เพื่อดึงข้อมูล <em>เฉพาะ</em> ของโพสต์นั้น รวมถึง <code>contentHtml</code> ที่แปลงแล้ว</li>
<li><code>return { props: { postData } }</code>: ส่งข้อมูล <code>postData</code> (title, date, contentHtml, etc.) ไปให้ <code>Post</code> component</li>
</ul>
</li>
<li><strong><code>Post</code> Component</strong>:
<ul>
<li>รับ <code>postData</code> มาจาก <code>props</code></li>
<li>แสดง <code>title</code>, <code>date</code> (และ <code>author</code> ถ้ามี)</li>
<li><strong><code>dangerouslySetInnerHTML={{ __html: postData.contentHtml }}</code></strong>: นี่คือส่วนสำคัญในการแสดงเนื้อหา HTML ที่เราได้จากการแปลง Markdown ด้วย <code>remark</code>. React ปกติจะไม่ render HTML ตรงๆ เพื่อป้องกัน XSS attacks แต่ในกรณีนี้เรารู้ว่า HTML มาจาก Markdown ที่เราควบคุม เราจึงใช้ prop นี้เพื่อบอก React ให้ render HTML string นั้นออกมา <strong>ต้องมั่นใจว่าแหล่งที่มาของ Markdown ปลอดภัย</strong></li>
<li>มีลิงก์สำหรับกลับไปหน้าแรก</li>
</ul>
</li>
</ol>
<hr>
<p><strong>ขั้นตอนที่ 6: เพิ่มสไตล์ (Optional แต่แนะนำ)</strong></p>
<p>สร้างไฟล์ CSS เพื่อให้หน้าเว็บดูดีขึ้น</p>
<ol>
<li>
<p><strong><code>styles/Home.module.css</code></strong> (ตัวอย่าง):</p>
<pre><code class="language-css">/* styles/Home.module.css */
.container {
  padding: 0 2rem;
}

.main {
  min-height: 100vh;
  padding: 4rem 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.title {
  margin: 0;
  line-height: 1.15;
  font-size: 4rem;
  text-align: center;
  margin-bottom: 2rem;
}

.blogList {
  width: 100%;
  max-width: 800px; /* จำกัดความกว้าง */
}

.blogList h2 {
    margin-bottom: 1rem;
    border-bottom: 1px solid #eaeaea;
    padding-bottom: 0.5rem;
}

.blogList ul {
  list-style: none;
  padding: 0;
}

.listItem {
  margin: 1rem 0;
  padding: 1rem;
  border: 1px solid #eaeaea;
  border-radius: 5px;
  transition: background-color 0.2s ease;
}
.listItem:hover {
    background-color: #fafafa;
}

.listItem a {
  font-size: 1.5rem;
  color: #0070f3;
  text-decoration: none;
}
.listItem a:hover {
    text-decoration: underline;
}

.lightText {
  color: #666;
  font-size: 0.9rem;
}
</code></pre>
</li>
<li>
<p><strong><code>styles/Post.module.css</code></strong> (ตัวอย่าง):</p>
<pre><code class="language-css">/* styles/Post.module.css */
.container {
  padding: 2rem;
  max-width: 800px;
  margin: 0 auto; /* จัดกลาง */
}

.article {
  line-height: 1.6;
}

.title {
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
}

.meta {
  color: #666;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.separator {
    border: 0;
    height: 1px;
    background: #eaeaea;
    margin: 2rem 0;
}

/* สไตล์สำหรับเนื้อหา Markdown ที่แปลงเป็น HTML */
.article h2 {
    font-size: 1.8rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
}
.article p {
    margin-bottom: 1rem;
}
.article code {
    background: #f4f4f4;
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-family: monospace;
}
.article pre code {
    display: block;
    padding: 1rem;
    overflow-x: auto; /* ทำให้ scroll แนวนอนได้ถ้า code ยาว */
}
.article blockquote {
    border-left: 3px solid #ccc;
    padding-left: 1rem;
    margin-left: 0;
    color: #666;
}
.article ul, .article ol {
    padding-left: 2rem;
    margin-bottom: 1rem;
}
.article img {
    max-width: 100%;
    height: auto;
    display: block; /* ป้องกัน space ใต้รูป */
    margin: 1rem 0;
}


.backToHome {
  margin-top: 3rem;
}

.backToHome a {
  color: #0070f3;
  text-decoration: none;
}
.backToHome a:hover {
    text-decoration: underline;
}
</code></pre>
</li>
</ol>
<hr>
<p><strong>ขั้นตอนที่ 7: ทดสอบการทำงาน</strong></p>
<ol>
<li><strong>รัน Development Server:</strong>
<pre><code class="language-bash">npm run dev
# หรือ yarn dev
</code></pre>
</li>
<li><strong>เปิดเบราว์เซอร์:</strong> ไปที่ <code>http://localhost:3000</code>
<ul>
<li>คุณควรเห็นหน้าแรกพร้อมรายการบทความที่คุณสร้างไว้</li>
<li>คลิกที่ชื่อบทความ คุณควรจะถูกพาไปยังหน้ารายละเอียดของบทความนั้น (เช่น <code>http://localhost:3000/posts/first-post</code>)</li>
<li>หน้ารายละเอียดควรแสดงชื่อเรื่อง, วันที่, และเนื้อหาที่แปลงจาก Markdown เป็น HTML อย่างถูกต้อง</li>
<li>ลองเพิ่ม/แก้ไขไฟล์ <code>.md</code> ในโฟลเดอร์ <code>posts</code> แล้วรีเฟรชหน้าเว็บ (ใน dev mode, Next.js มักจะอัปเดตให้อัตโนมัติ)</li>
</ul>
</li>
</ol>
<hr>
<p><strong>สรุปและขั้นตอนต่อไป:</strong></p>
<p>ตอนนี้คุณได้สร้างเว็บ Blog พื้นฐานด้วย Next.js ที่ดึงข้อมูลจากไฟล์ Markdown โดยใช้ <code>gray-matter</code> และ <code>remark</code> ได้สำเร็จแล้ว!</p>
<p><strong>สิ่งที่คุณได้เรียนรู้:</strong></p>
<ul>
<li>การตั้งค่าโปรเจกต์ Next.js</li>
<li>การใช้ <code>gray-matter</code> เพื่อ parse Markdown frontmatter</li>
<li>การใช้ <code>remark</code> และ <code>remark-html</code> เพื่อแปลง Markdown content เป็น HTML</li>
<li>การใช้ <code>fs</code> และ <code>path</code> ของ Node.js เพื่ออ่านไฟล์</li>
<li>การใช้ <code>getStaticProps</code> เพื่อดึงข้อมูลสำหรับ Static Generation (SSG) ในหน้า List</li>
<li>การใช้ Dynamic Routes (<code>[id].js</code>) ร่วมกับ <code>getStaticPaths</code> และ <code>getStaticProps</code> เพื่อสร้างหน้ารายละเอียดสำหรับแต่ละบทความ</li>
<li>การแสดงผล HTML ที่ได้จาก Markdown โดยใช้ <code>dangerouslySetInnerHTML</code></li>
</ul>
<p><strong>ขั้นตอนต่อไปที่น่าสนใจ:</strong></p>
<ul>
<li><strong>การจัดรูปแบบวันที่ (Date Formatting):</strong> ใช้ library อย่าง <code>date-fns</code> หรือ <code>dayjs</code> เพื่อแสดงวันที่ในรูปแบบที่อ่านง่ายขึ้น</li>
<li><strong>การทำ Pagination:</strong> ถ้ามีบทความจำนวนมาก ควรแบ่งหน้าแสดงผลในหน้า List</li>
<li><strong>การเพิ่ม Tags หรือ Categories:</strong> เพิ่มข้อมูล tag/category ใน frontmatter และสร้างหน้าสำหรับกรองบทความตาม tag/category</li>
<li><strong>การเพิ่มฟีเจอร์ค้นหา (Search):</strong> สร้างช่องค้นหาเพื่อกรองบทความ</li>
<li><strong>การปรับปรุง SEO:</strong> เพิ่ม meta tags ที่ละเอียดขึ้นในแต่ละหน้า</li>
<li><strong>การ Deploy:</strong> นำเว็บขึ้น Host จริง (เช่น Vercel, Netlify ซึ่งทำงานกับ Next.js ได้ดีมาก)</li>
<li><strong>การใช้ MDX:</strong> ถ้าต้องการใช้ Component ของ React ภายในไฟล์ Markdown ลองศึกษา MDX (<code>@next/mdx</code>)</li>
</ul>
<p>หวังว่าบทเรียนนี้จะเป็นประโยชน์และละเอียดเพียงพอนะครับ! หากมีคำถามเพิ่มเติม ถามได้เลยครับ</p>
5:[["$","h2",null,{"children":"Next.js ร่วมกับ gray-matter"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$14"}}]]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
12:{"metadata":[["$","title","0",{"children":"one.ilmsg.in.th"}],["$","meta","1",{"name":"description","content":"weblog ilmsg.in.th"}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
